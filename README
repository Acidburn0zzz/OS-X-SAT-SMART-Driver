OS X SAT SMART Driver
#####################

This is a kernel driver for Mac OS X external USB or FireWire drives.
It extends the standard driver behaviour by providing access to drive
SMART data. The interface to SMART data is same as with ATA family
driver, so most existing applications should work. The driver requires
a SAT (SCSI ATA Translation) capable external drive enclosure.

The driver consists of a kernel extension and a user client interface
library.

The code is based on Apple opensource files and is therefore published
under Apple Public Source License. For details see
http://www.opensource.apple.com/license/apsl/

Install
=======
 
 * Use the dmg image and the installer
 * Power cycle the external drives
 * Check DiskUtility. The disk should have "S.M.A.R.T. Status: Verified"


Uninstall
=========

 * Remove driver and plugin
    sudo rm -r /System/Library/Extensions/SATSMARTDriver.kext
    sudo rm -r /System/Library/Extensions/SATSMARTLib.plugin
 * Reboot


Compile
=======

 * Compile all targets using XCode.
    cd SATSMARTDriver
    xcodebuild -configuration Debug

 * Unmount all existing external drives.

 * Load the kernel extension.
    sudo tail -f /private/var/log/kernel.log &
    cd build/Debug/
    sudo cp -R SATSMARTLib.plugin /System/Library/Extensions
    sudo cp -R SATSMARTDriver.kext /tmp
    sudo kextutil -t /tmp/SATSMARTDriver.kext

 * The external drives should mount automatically. Check them briefly
   and unmount them.

 * Test
    ./smart_status

    ./smart_sample -a

 * Check DiskUtility. The disk should have "S.M.A.R.T. Status: Verified"

 * Install the driver to system permanently
    sudo cp -R SATSMARTDriver.kext  /System/Library/Extensions

 * Reboot

 * If you want to limit the driver for certain hardware add product 
   and vendor identification to SATSMARTDriver/Info.plist. For example:
			<key>Product Identification</key>
			<string>External</string>
			<key>Vendor Identification</key>
			<string>Generic</string>
   You can find out the identification string from io registry:
       ioreg -r -c IOSCSIPeripheralDeviceNub
..
+-o IOSCSIPeripheralDeviceNub  <class IOSCSIPeripheralDeviceNub, id 0x100000256$
  | {
  |   "IOProviderClass" = "IOSCSIProtocolServices"
  |   "Protocol Characteristics" = {"Physical Interconnect"="USB","Physical Int$
  |   "IOMatchCategory" = "SCSITaskUserClientIniter"
  |   "Product Revision Level" = "2.02"
  |   "IOProbeScore" = 0
  |   "Product Identification" = "External"
  |   "CFBundleIdentifier" = "com.apple.iokit.IOSCSIArchitectureModelFamily"
  |   "Vendor Identification" = "Generic"
  |   "IOClass" = "IOSCSIPeripheralDeviceNub"
  |   "Peripheral Device Type" = 0
  | }
..
